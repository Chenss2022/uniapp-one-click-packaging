{
    "clogios": {
        "body": [
            "console.log(JSON.stringify(${1:e}));",
            "console.log('${2:e}');"
        ],
        "prefix": "cloios",
        "triggerAssist": true
    },
    "documentaddEventListener": {
        "body": [
            "document.addEventListener('${1:scroll}',function ($2) {",
            "        $0",
            "})"
        ],
        "prefix": "dad",
        "triggerAssist": true
    },
    "getElementByIdaddEventListener": {
        "body": [
            "document.getElementById('$1').addEventListener('${2:tap}',function ($3) {",
            "        $0",
            "})"
        ],
        "prefix": "dga",
        "triggerAssist": true
    },
    "mui": {
        "body": [
            "mui."
        ],
        "prefix": "mui",
        "triggerAssist": true
    },
    "mui('').pullRefresh": {
        "body": [
            "mui('#${1:refreshContainer}').pullRefresh().$2"
        ],
        "prefix": "mmpullrefresh",
        "triggerAssist": true
    },
    "mui('').scroll": {
        "body": [
            "mui('.${1:mui-scroll-wrapper}').scroll({$2})$0"
        ],
        "prefix": "mmscroll",
        "triggerAssist": true
    },
    "mui('').slider": {
        "body": [
            "mui('.${1:mui-slider}').slider({$2})$0"
        ],
        "prefix": "mmslider",
        "triggerAssist": true
    },
    "mui()": {
        "body": [
            "mui('$1')"
        ],
        "prefix": "mmui",
        "triggerAssist": true
    },
    "mui().each()": {
        "body": [
            "mui('$1').each(function (${3:index},${4:element}) {",
            "\t$0",
            "})"
        ],
        "prefix": "mmeach",
        "triggerAssist": false
    },
    "mui.ajax()": {
        "body": [
            "mui.ajax('$1',{",
            "\tdata:{",
            "\t\t$2",
            "\t},",
            "\tdataType:'${3:json}',//服务器返回json格式数据",
            "\ttype:'${4:post}',//HTTP请求类型",
            "\ttimeout:${5:10000},//超时时间设置为10秒；",
            "\tsuccess:function(${6:data}){",
            "\t\t$7",
            "\t},",
            "\terror:function(${8:xhr,type,errorThrown}){",
            "\t\t$9",
            "\t}",
            "});$0"
        ],
        "prefix": "majax",
        "triggerAssist": true
    },
    "mui.alert()": {
        "body": [
            "mui.alert('${1:message}','${2:title}','${3:btnValue}',function (${4:e}) {",
            "   ${4:e}.index$0",
            "}${5:,'div'})"
        ],
        "prefix": "mdalert",
        "triggerAssist": false
    },
    "mui.back()(返回上级页面)": {
        "body": [
            "mui.back()$0"
        ],
        "prefix": "mback",
        "triggerAssist": false
    },
    "mui.backDouble(双击退出应用)": {
        "body": [
            "//首页返回键处理",
            "//处理逻辑：1秒内，连续两次按返回键，则退出应用；",
            "var first = null;",
            "mui.back = function() {",
            "\t//首次按键，提示‘再按一次退出应用’",
            "\tif (!first) {",
            "\t\tfirst = new Date().getTime();",
            "\t\tmui.toast('再按一次退出应用');",
            "\t\tsetTimeout(function() {",
            "\t\t\tfirst = null;",
            "\t\t}, 1000);",
            "\t} else {",
            "\t\tif (new Date().getTime() - first < 1000) {",
            "\t\t\tplus.runtime.quit();",
            "\t\t}",
            "\t}",
            "};"
        ],
        "prefix": "mbackDouble",
        "triggerAssist": false
    },
    "mui.backFunction(重写返回逻辑)": {
        "body": [
            "mui.back=function () {",
            "    $0\t",
            "}"
        ],
        "prefix": "mbackfunction",
        "triggerAssist": false
    },
    "mui.backTask(双击进入后台)": {
        "body": [
            "//首页返回键处理",
            "//处理逻辑：1秒内，连续两次按返回键，则进入后台；",
            "var first = null;",
            "mui.back = function() {",
            "\t//首次按键，提示‘再按一次退出应用’",
            "\tif (!first) {",
            "\t\tfirst = new Date().getTime();",
            "\t\tmui.toast('再按一次退出应用');",
            "\t\tsetTimeout(function() {",
            "\t\t\tfirst = null;",
            "\t\t}, 1000);",
            "\t} else {",
            "\t\tif (new Date().getTime() - first < 1000) {",
            "\t\t\tvar main = plus.android.runtimeMainActivity();",
            "            main.moveTaskToBack(false);",
            "\t\t}",
            "\t}",
            "};"
        ],
        "prefix": "mbackMoveTaskToBack",
        "triggerAssist": false
    },
    "mui.closePopup()": {
        "body": [
            "mui.closePopup()$0"
        ],
        "prefix": "mdclosePopup",
        "triggerAssist": false
    },
    "mui.closePopups()": {
        "body": [
            "mui.closePopups()$0"
        ],
        "prefix": "mdclosePopups",
        "triggerAssist": false
    },
    "mui.confirm()": {
        "body": [
            "mui.confirm('${1:message}','${2:title}',['${3:取消}','${4:确认}'],function (${5:e}) {",
            "\t${5:e}.index$0",
            "}${6:,'div'})"
        ],
        "prefix": "mdconfirm",
        "triggerAssist": false
    },
    "mui.currentWebview": {
        "body": [
            "mui.currentWebview."
        ],
        "prefix": "mcurrent",
        "triggerAssist": true
    },
    "mui.each()": {
        "body": [
            "mui.each(${1:obj},function (${2:index},${3:element}) {",
            "\t$0",
            "})"
        ],
        "prefix": "meach",
        "triggerAssist": false
    },
    "mui.extend()": {
        "body": [
            "mui.extend(${1:'target'},${2:'source'},${3:'deep'/true/false})"
        ],
        "prefix": "mextend",
        "triggerAssist": false
    },
    "mui.fire()": {
        "body": [
            "mui.fire(${1:targetWebviewObj},'${2:event}',{${3:data}})"
        ],
        "prefix": "mfire",
        "triggerAssist": true
    },
    "mui.get()": {
        "body": [
            "mui.get('$1',{",
            "\t\t$2",
            "\t},function(${3:data}){",
            "\t\t$0",
            "\t},'${4:json}'",
            ");"
        ],
        "prefix": "mget",
        "triggerAssist": true
    },
    "mui.getJSON()": {
        "body": [
            "mui.getJSON('$1',{$2},function($3){",
            "\t\t$4",
            "\t}",
            ");$0"
        ],
        "prefix": "mjson",
        "triggerAssist": true
    },
    "mui.init": {
        "body": [
            "mui.init({$0})"
        ],
        "prefix": "minit",
        "triggerAssist": false
    },
    "mui.init({侧滑返回})": {
        "body": [
            "mui.init({",
            "\tswipeBack:${1:true/false} ",
            ");$0"
        ],
        "prefix": "minswipeback",
        "triggerAssist": false
    },
    "mui.init({刷新组件})": {
        "body": [
            "mui.init({",
            "  pullRefresh : {",
            "    container:'#${1:refreshContainer}',",
            "    down : {",
            "      callback :${2:pullfresh}",
            "    },",
            "    up : {",
            "      callback :${3:pullfresh} ",
            "    }",
            "  }",
            "});$0"
        ],
        "prefix": "minpullRefresh",
        "triggerAssist": true
    },
    "mui.init({子页面})": {
        "body": [
            "mui.init({",
            "\tsubpages:[{",
            "\t  url:'${1:url}',",
            "      id:'${2:id}',",
            "      styles:{",
            "        $3",
            "      },",
            "      extras:{$4}",
            "\t}]",
            "})$0"
        ],
        "prefix": "minsubpage",
        "triggerAssist": true
    },
    "mui.init({手势事件})": {
        "body": [
            "mui.init({",
            "  \tgestureConfig:{",
            "\t   tap: ${1:true/false}, ",
            "\t   doubletap: ${2:true/false}, ",
            "\t   longtap: ${3:true/false}, ",
            "\t   swipe: ${4:true/false}, ",
            "\t   drag: ${5:true/false}, ",
            "\t   hold:${6:false/true},",
            "\t   release:${7:false/true}",
            "  \t}",
            "});$0"
        ],
        "prefix": "mingesture",
        "triggerAssist": false
    },
    "mui.init({按键绑定})": {
        "body": [
            "mui.init({",
            "\tkeyEventBind: {",
            "\t\tbackbutton: ${1:true/false},  ",
            "\t\tmenubutton: ${2:true/false}   ",
            "\t},",
            "})"
        ],
        "prefix": "minkeyevent",
        "triggerAssist": false
    },
    "mui.init({设置状态栏颜色})": {
        "body": [
            "mui.init({",
            "\tstatusBarBackground:'#${1:FFFFFF}'",
            "})"
        ],
        "prefix": "minstatusbar",
        "triggerAssist": true
    },
    "mui.init({重写窗口关闭逻辑})": {
        "body": [
            "mui.init({",
            "\tbeforeback:function () {",
            "\t\t$0",
            "\t}",
            "})"
        ],
        "prefix": "minbeforeback",
        "triggerAssist": false
    },
    "mui.init({预加载})": {
        "body": [
            "mui.init({",
            "\tpreloadPages:[{",
            "\t  url:'${1:url}',",
            "      id:'${2:id}',",
            "      styles:{",
            "        $3",
            "      },",
            "      extras:{$4}",
            "\t}]",
            "})$0"
        ],
        "prefix": "minpreload",
        "triggerAssist": true
    },
    "mui.init({预加载数量})": {
        "body": [
            "preloadLimit:${1:5}"
        ],
        "prefix": "minprelimit",
        "triggerAssist": true
    },
    "mui.later()": {
        "body": [
            "mui.later(function(){",
            "\t$2  ",
            "},${1:500/1000/1500/2000})"
        ],
        "prefix": "mlater",
        "triggerAssist": false
    },
    "mui.mask": {
        "body": [
            "var ${1:mask} = mui.createMask(function () {",
            "\t$2",
            "})",
            "${1:mask}.show()"
        ],
        "prefix": "mmask",
        "triggerAssist": false
    },
    "mui.off": {
        "body": [
            "mui('$1').off('${2:tap}','$3',function($4){",
            "  $0",
            "}) "
        ],
        "prefix": "mmoff",
        "triggerAssist": true
    },
    "mui.on": {
        "body": [
            "mui('$1').on('${2:tap}','$3',function($4){",
            "  $0",
            "}) "
        ],
        "prefix": "mmon",
        "triggerAssist": true
    },
    "mui.open": {
        "body": [
            "mui.openWindow('${1:url}','${2:id}',{$3})"
        ],
        "prefix": "mopen",
        "triggerAssist": true
    },
    "mui.os": {
        "body": [
            "mui.os."
        ],
        "prefix": "mos",
        "triggerAssist": true
    },
    "mui.plusReady()": {
        "body": [
            "mui.plusReady(function () {",
            "    $1",
            "})$0"
        ],
        "prefix": "mplusready",
        "triggerAssist": false
    },
    "mui.post()": {
        "body": [
            "mui.post('$1',{",
            "\t\t$2",
            "\t},function(${3:data}){",
            "\t\t$0",
            "\t},'${4:json}'",
            ");"
        ],
        "prefix": "mpost",
        "triggerAssist": true
    },
    "mui.preload()": {
        "body": [
            "mui.preload({",
            "\turl:'${1:url}',",
            "\tid:'${2:id}',",
            "\tstyles:{$3},//窗口参数",
            "\textras:{$4}//自定义扩展参数",
            "})$0"
        ],
        "prefix": "mpreload",
        "triggerAssist": true
    },
    "mui.prompt()": {
        "body": [
            "mui.prompt('${1:text}','${2:defaultText}','${3:title}',['${4:取消}','${5:确认}'],function (${6:e}) {",
            "    ${6:e}.index$0",
            "}${7:,'div'})"
        ],
        "prefix": "mdprompt",
        "triggerAssist": false
    },
    "mui.ready": {
        "body": [
            "mui.ready(function () {",
            "\t$0",
            "})"
        ],
        "prefix": "mready",
        "triggerAssist": false
    },
    "mui.scrollTo()": {
        "body": [
            "mui.scrollTo(${1:ypos},${2:duration},${3:/function () {",
            "    \t",
            "}}$0"
        ],
        "prefix": "mscrollto",
        "triggerAssist": false
    },
    "mui.toast()": {
        "body": [
            "mui.toast('${1:message}')$0"
        ],
        "prefix": "mdtoast",
        "triggerAssist": false
    },
    "mui.trigger()": {
        "body": [
            "mui.trigger(${1:dom},'${3:tap}'${4:,{a:'as'}})"
        ],
        "prefix": "mtrigger",
        "triggerAssist": false
    },
    "plusReady": {
        "body": [
            "function plusReady(){",
            "    $0",
            "}",
            "if (window.plus) {",
            "    plusReady()",
            "} else{",
            "    document.addEventListener('plusready',plusReady,false);",
            "}"
        ],
        "prefix": "pready",
        "triggerAssist": true
    },
    "querySelector": {
        "body": [
            "document.querySelector('$1').$0"
        ],
        "prefix": "ds",
        "triggerAssist": true
    },
    "querySelectoraddEventListener": {
        "body": [
            "document.querySelector('$1').addEventListener('${2:tap}',function ($3) {",
            "        $0",
            "})"
        ],
        "prefix": "dsa",
        "triggerAssist": true
    },
    "windowaddEventListener": {
        "body": [
            "window.addEventListener('${1:scroll}',function ($2) {",
            "        $0",
            "})"
        ],
        "prefix": "wad",
        "triggerAssist": true
    }
}
